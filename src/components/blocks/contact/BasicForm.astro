---
// Basic Contact Form
// ------------
// Description: A basic contact form with fields for first name, last name, email, phone number and message.
// Properties:
// - classes: Additional classes to be added to the block
// ------------

// Components
// - UI
import Card from '../../ui/cards/partials/Card.astro'
import CardBody from '../../ui/cards/partials/CardBody.astro'
import Form from '../../ui/forms/Form.astro'
import FormField from '../../ui/forms/partials/FormField.astro'
import InputField from '../../ui/forms/form-elements/InputField.astro'
import TextArea from '../../ui/forms/form-elements/TextArea.astro'
import Button from '../../ui/Button.astro'

// Props
type Props = {
	classes?: string
}
const { classes } = Astro.props
---

<Card classes={classes}>
	<CardBody>
		<Form method="post" id="contactForm">
			<h2 class="text-2xl">Get in Touch</h2>
			<FormField>
				<InputField type="text" id="firstName" label="First Name" />
				<InputField type="text" id="lastName" label="Last Name" />
			</FormField>
			<FormField>
				<InputField type="email" id="email" label="Email" required value="" />
			</FormField>
			<FormField>
				<InputField type="tel" id="phone" label="phone number" />
			</FormField>
			<FormField><TextArea id="message" label="Your Message" required /></FormField>
			<Button style="primary" type="submit">Submit</Button>
		</Form>
	</CardBody>
</Card>

<script>
	const button = document.querySelector('#contactForm button[type="submit"]') as HTMLButtonElement

	async function onFormSubmit(e: SubmitEvent) {
		try {
			console.log('Clicked')
			e.preventDefault()
			button.disabled = true
			const formData = new FormData(e.target as HTMLFormElement)
			const firstName = formData.get('firstName') as string
			const lastName = formData.get('lastName') as string
			const email = formData.get('email')
			const phone = formData.get('phone')
			const message = formData.get('message')
			console.log({ firstName, lastName, email, phone, message })
			const url =
				'https://script.google.com/a/macros/cloudfort.in/s/AKfycby-1gcIBk1L21neYmiceMpWiqRMl96CMoWUuveLe-rq1mB7HqRKfWS5yCjjfhaN8JyW/exec'
			//@ts-ignore
			const qs = new URLSearchParams({
				firstName,
				lastName,
				email,
				phone,
				message
			})
			console.log(qs)
			const data = await fetch(`${url}?${qs}`, {
				credentials: 'include',
				mode: 'no-cors',
				method: 'POST',
				headers: {
					'Content-Type': 'application/json'
				}
			})

			// setTimeout(function () {
			// 	window.location.reload()
			// }, 100)

			//@ts-ignore
			Toastify({
				text: 'Your question was submitted successfully',
				duration: 3000,
				//   destination: "https://github.com/apvarun/toastify-js",
				gravity: 'bottom', // `top` or `bottom`
				position: 'center', // `left`, `center` or `right`
				stopOnFocus: true, // Prevents dismissing of toast on hover
				style: {
					background: '#22c55e'
				}
			}).showToast()
		} catch (error) {
			console.error(error)
		} finally {
			button.disabled = false
		}
	}

	document.getElementById('contactForm')?.addEventListener('submit', onFormSubmit)
</script>
